# Multi-stage Dockerfile for CDK deployment
# Stage 1: Build the Spring Boot application
FROM maven:3.9.6-amazoncorretto-21 AS builder

WORKDIR /app

# Copy Maven files for dependency caching
COPY pom.xml .
COPY mvnw .
COPY mvnw.cmd .
COPY .mvn .mvn

# Download dependencies (this layer will be cached if pom.xml doesn't change)
RUN ./mvnw dependency:go-offline -B

# Copy source code
COPY src ./src
COPY package.json .
COPY package-lock.json .
COPY tsconfig.json .
COPY webpack.config.cjs .
COPY eslint.config.js .

# Install Node.js dependencies and build frontend
RUN curl -fsSL https://deb.nodesource.com/setup_18.x | bash - && \
    apt-get install -y nodejs && \
    npm ci && \
    npm run build

# Build the Spring Boot application
RUN ./mvnw clean package -DskipTests

# Stage 2: Runtime image
FROM amazoncorretto:21-alpine-jdk

RUN apk add --no-cache shadow

RUN groupadd -g 1001 app-group && \
    useradd -u 1001 -g 1001 app-user

USER app-user

WORKDIR /home/app-user

# Copy the built JAR from the builder stage
COPY --from=builder /app/target/*.jar app.jar

ENTRYPOINT ["java","-jar","app.jar", "--spring.profiles.active=prod"]